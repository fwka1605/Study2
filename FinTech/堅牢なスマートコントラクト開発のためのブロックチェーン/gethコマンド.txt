#######################################
# Gethの使用方法やコマンドは以下のサイトでも確認できます。
# ・JavaScript Console・ethereum/go-ethereum.Wiki・GitHub
#  https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console
# ・JavaScript API・ethereum/wiki Wiki・GitHub
#  https://github.com/ethereum/wiki/wiki/JavaScript-API
#######################################

# パスワードなし起動
geth --networkid "15" --nodiscover --datadir "C:\tools\ethereum\Geth\home\eth_private_net" --rpc --rpcaddr "127.0.0.1" --rpcport "8545" --rpccorsdomain "*" --rpcapi "eth,net,web3,personal" --targetgaslimit "20000000" console 2>>C:\tools\ethereum\Geth\home\eth_private_net\geth_err.log

# パスワード付き起動
# パスワードファイルが必要
# Password.txtをC:\tools\ethereum\Geth\home\eth_private_net直下に作成する。 
# ファイルには、eth.accounts[0]からeth.accounts[3]の全てのパスワードを改行区切りで設定する。
geth --networkid "15" --nodiscover --datadir "C:\tools\ethereum\Geth\home\eth_private_net" --rpc --rpcaddr "localhost" --rpcport "8545" --rpccorsdomain "*" --rpcapi "eth,net,web3,personal" --targetgaslimit "20000000" --unlock 0x5828a6fc297084b0cd6b22fb342654663ec345b9,0xe29f75427595c099e607a6442d783c694340fa15,0xb2d1fd52aa993017ae2744862483475a54975bd5,0xb4d61253e665b512b9f0b18d4e6c572fe960dc5b --password "C:\tools\ethereum\Geth\home\eth_private_net\password.txt" console 2>> C:\tools\ethereum\Geth\home\eth_private_net\geth_err.log

# EOAアカウントの作成
personal.newAccount("パスワード")

#ロック解除
personal.unlockAccount(eth.accounts[0])

##################
#アカウントの確認
##################
# 全件
eth.accounts
# 1件
eth.accounts[0]
# coinbaseアカウントの確認
eth.coinbase

# coinbaseのアカウントを変更する
miner.setEtherbase(eth.accounts[1])

# ブロックの確認
eth.getBlock(0)

##################
#マイニング
##################
# 開始(引数はスレッド数)
miner.start(2)
# 停止
miner.stop()
# マイニングの確認
eth.mining

##################
# 残高
##################
# 残高(単位wei)確認
eth.getBalance(eth.accounts[0])
# 残高(単位ether)確認
web3.fromWei(eth.getBalance(eth.accounts[0]))

# ether送金
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[2],value:web3.toWei(5,“ether”)})

# トランザクションの確認
eth.getTransaction("トランザクションのアドレス")
# トランザクションのレシートの確認
eth.getTransactionReceipt("トランザクションのアドレス")

##################
#便利コマンド
##################
# 文字列変換
web3.toAscii("16進数文字列")
# 文字列変換
web3.toUtf8("16進数文字列")

# コントラクト操作用の変数を定義
var nr = eth.contract(コントラクトのJsonインタフェース).at('コントラクトのアドレス')










