'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized

Partial Public Class Category
    #Region "Primitive Properties"

    Public Overridable Property ID As Integer

    Public Overridable Property CategoryName As String

    Public Overridable Property Detail As String

    #End Region
    #Region "Navigation Properties"
    Public Overridable Property Entries As ICollection(Of Entry)
        Get
            If _entries Is Nothing Then
                Dim newCollection As New FixupCollection(Of Entry)
                AddHandler newCollection.CollectionChanged, AddressOf FixupEntries
                _entries = newCollection
            End If
            Return _entries
        End Get
        Set(ByVal value As ICollection(Of Entry))
            If _entries IsNot value Then
                Dim previousValue As FixupCollection(Of Entry) = TryCast(_entries, FixupCollection(Of Entry))
                If previousValue IsNot Nothing Then
                    RemoveHandler previousValue.CollectionChanged, AddressOf FixupEntries
                End If
                _entries = value
                Dim newValue As FixupCollection(Of Entry) = TryCast(value, FixupCollection(Of Entry))
                If newValue IsNot Nothing Then
                    AddHandler newValue.CollectionChanged, AddressOf FixupEntries
                End If
            End If
        End Set
    End Property
    Private _entries As ICollection(Of Entry)

    #End Region
    #Region "Association Fixup"
    Private Sub FixupEntries(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If e.NewItems IsNot Nothing Then
            For Each item As Entry In e.NewItems
                If Not item.Categories.Contains(Me) Then
                    item.Categories.Add(Me)
                End If
            Next
        End If
        If e.OldItems IsNot Nothing Then
            For Each item As Entry In e.OldItems
                If item.Categories.Contains(Me) Then
                    item.Categories.Remove(Me)
                End If
            Next
        End If
    End Sub

    #End Region
End Class
